{"version":3,"sources":["layouts.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA,4CAAA;;AAAA,EAAA,MAAM,CAAC,oBAAP,GAAoC;AACrB,IAAA,8BAAC,IAAD,GAAA;AACX,MADY,IAAC,CAAA,OAAD,IACZ,CAAA;AAAA,MAAA,IAAC,CAAA,KAAD,GAAS,CAAT,CAAA;AAAA,MACA,IAAC,CAAA,YAAD,GAAgB,CADhB,CAAA;AAAA,MAGA,IAAC,CAAA,WAAD,CAAA,CAHA,CADW;IAAA,CAAb;;AAAA,mCAMA,EAAA,GAAI,SAAA,GAAA;AAEF,UAAA,iEAAA;AAAA,MAAA,aAAA,GAAgB,MAAA,CAAO,QAAP,CAAgB,CAAC,MAAjB,CAAA,CAAhB,CAAA;AAAA,MACA,YAAA,GAAgB,MAAA,CAAO,QAAP,CAAgB,CAAC,KAAjB,CAAA,CADhB,CAAA;AAAA,MAIA,WAAA,GAAc,CAAC,aAAA,GAAgB,IAAC,CAAA,YAAD,GAAgB,CAAC,IAAC,CAAA,KAAD,GAAS,CAAV,CAAjC,CAAA,GAAiD,IAAC,CAAA,KAJhE,CAAA;AAAA,MAMA,IAAA,GAAO,IANP,CAAA;AAAA,MAOA,QAAA,GAAW,CAPX,CAAA;AAAA,MAQA,OAAA,GAAU,CARV,CAAA;AAAA,MAUA,IAAC,CAAA,IAAI,CAAC,UAAN,CAAiB,SAAC,GAAD,EAAM,KAAN,GAAA;AACf,YAAA,eAAA;AAAA,QAAA,CAAA,GAAI,CAAA,CAAC,CAAE,GAAA,GAAM,IAAI,CAAC,KAAZ,CAAN,CAAA;AAAA,QACA,CAAA,GAAI,GAAA,GAAM,IAAI,CAAC,KADf,CAAA;AAAA,QAGA,IAAA,GAAO,IAAI,CAAC,YAAL,GAAoB,CAAA,GAAI,CAAC,WAAA,GAAc,IAAI,CAAC,YAApB,CAH/B,CAAA;AAAA,QAIA,GAAA,GAAM,IAAI,CAAC,YAAL,GAAoB,CAAA,GAAI,CAAC,WAAA,GAAc,IAAI,CAAC,YAApB,CAJ9B,CAAA;AAAA,QAMA,KAAK,CAAC,CAAN,GAAU,CANV,CAAA;AAAA,QAOA,KAAK,CAAC,CAAN,GAAU,CAPV,CAAA;AAAA,QAQA,QAAA,GAAW,CARX,CAAA;AAAA,QASA,OAAA,GAAU,CATV,CAAA;AAAA,QAUA,KAAK,CAAC,GAAN,CAAU,IAAV,EAAgB,GAAhB,EAAqB,WAArB,EAAkC,WAAlC,CAVA,CAAA;AAAA,QAYA,QAAA,GAAW,IAAI,CAAC,GAAL,CAAS,QAAT,EAAmB,KAAK,CAAC,WAAzB,CAZX,CAAA;AAAA,QAaA,OAAA,GAAU,IAAI,CAAC,GAAL,CAAS,OAAT,EAAkB,KAAK,CAAC,UAAxB,CAbV,CAAA;AAeA,QAAA,IAAgB,KAAK,CAAC,YAAN,CAAA,CAAhB;iBAAA,KAAK,CAAC,IAAN,CAAA,EAAA;SAhBe;MAAA,CAAjB,CAVA,CAAA;aA4BA,IAAC,CAAA,IAAI,CAAC,UACJ,CAAC,GADH,CAEI;AAAA,QAAA,QAAA,EAAU,MAAV;AAAA,QACA,OAAA,EAAS,QAAA,GAAW,WADpB;OAFJ,EA9BE;IAAA,CANJ,CAAA;;AAAA,mCAyCA,WAAA,GAAa,SAAA,GAAA;aAEX,IAAC,CAAA,IAAI,CAAC,GAAG,CAAC,EAAV,CAAa,YAAb,EAA2B,CAAA,SAAA,KAAA,GAAA;eAAA,SAAC,GAAD,GAAA;AACzB,cAAA,UAAA;AAAA,UAAA,IAAA,GAAO,GAAP,CAAA;AAAA,UACA,IAAA,GAAO,QAAA,CAAS,KAAC,CAAA,IAAI,CAAC,UAAU,CAAC,GAAjB,CAAqB,MAArB,CAAT,CADP,CAAA;AAEA,UAAA,IAAgB,GAAG,CAAC,MAAJ,GAAa,CAA7B;AAAA,YAAA,IAAA,IAAQ,IAAR,CAAA;WAFA;AAGA,UAAA,IAAgB,GAAG,CAAC,MAAJ,GAAa,CAA7B;AAAA,YAAA,IAAA,IAAQ,IAAR,CAAA;WAHA;AAIA,UAAA,IAAY,IAAA,GAAO,CAAnB;AAAA,YAAA,IAAA,GAAO,CAAP,CAAA;WAJA;AAAA,UAMA,KAAC,CAAA,IAAI,CAAC,UACJ,CAAC,GADH,CAEI;AAAA,YAAA,MAAA,EAAQ,IAAR;WAFJ,CANA,CAAA;iBAUA,KAAC,CAAA,IAAI,CAAC,gBAAN,CAAA,EAXyB;QAAA,EAAA;MAAA,CAAA,CAAA,CAAA,IAAA,CAA3B,EAFW;IAAA,CAzCb,CAAA;;gCAAA;;MADF,CAAA;;AAAA,EA2DA,MAAM,CAAC,UAAP,GAA0B;AACxB,yBAAA,YAAA,GAAc,EAAd,CAAA;;AAEa,IAAA,oBAAC,IAAD,GAAA;AAAQ,MAAP,IAAC,CAAA,OAAD,IAAO,CAAR;IAAA,CAFb;;AAAA,yBAIA,MAAA,GAAQ,SAAA,GAAA;aACN,UAAA,CAAW,CAAA,SAAA,KAAA,GAAA;eAAA,SAAA,GAAA;AACT,cAAA,wEAAA;AAAA,UAAA,eAAA,GAAkB,KAAC,CAAA,IAAI,CAAC,SAAN,CAAA,CAAlB,CAAA;AAAA,UACA,aAAA,GAAgB,CAAA,CAAC,CAAE,eAAA,GAAkB,GAAnB,CADlB,CAAA;AAAA,UAEA,SAAA,GAAY,IAAI,CAAC,iBAAL,CAAuB,eAAvB,EAAwC,aAAxC,EAAuD,KAAC,CAAA,YAAxD,CAFZ,CAAA;AAAA,UAGA,WAAA,GAAc,SAAS,CAAC,WAHxB,CAAA;AAAA,UAIA,IAAA,GAAO,IAAI,CAAC,UAAL,CAAgB,aAAhB,EAA+B,SAAA,GAAA;mBACpC;AAAA,cAAA,MAAA,EAAQ,KAAC,CAAA,YAAT;cADoC;UAAA,CAA/B,CAJP,CAAA;AAAA,UAOA,KAAC,CAAA,IAAI,CAAC,UAAN,CAAiB,SAAC,GAAD,EAAM,KAAN,GAAA;AACf,gBAAA,6BAAA;AAAA,YAAA,OAAA,GAAU,IAAI,CAAC,GAAL,CAAS,SAAC,GAAD,GAAA;qBAAQ,GAAG,CAAC,OAAZ;YAAA,CAAT,CAAV,CAAA;AAAA,YACA,GAAA,GAAM,IAAI,CAAC,SAAL,CAAe,OAAf,CADN,CAAA;AAAA,YAEA,CAAA,GAAI,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAFJ,CAAA;AAAA,YAGA,IAAA,GAAO,SAAS,CAAC,SAAU,CAAA,CAAA,CAH3B,CAAA;AAAA,YAIA,MAAA,GAAS,WAAA,GAAc,KAAK,CAAC,MAApB,GAA6B,KAAK,CAAC,KAJ5C,CAAA;AAAA,YAKA,IAAK,CAAA,CAAA,CAAE,CAAC,MAAR,IAAkB,MAAA,GAAS,KAAC,CAAA,YAL5B,CAAA;AAAA,YAOA,KAAK,CAAC,GAAN,CAAU,IAAV,EAAgB,GAAhB,EAAqB,WAArB,EAAkC,MAAlC,CAPA,CAAA;mBAQA,KAAK,CAAC,SAAN,CAAA,EATe;UAAA,CAAjB,CAPA,CAAA;AAAA,UAkBA,UAAA,GAAa,IAAI,CAAC,SAAL,CAAe,IAAI,CAAC,GAAL,CAAS,SAAC,GAAD,GAAA;mBAAQ,GAAG,CAAC,OAAZ;UAAA,CAAT,CAAf,CAlBb,CAAA;iBAmBA,KAAC,CAAA,IAAI,CAAC,GAAG,CAAC,GAAV,CAAc,QAAd,EAAwB,UAAA,GAAa,KAAC,CAAA,aAAtC,EApBS;QAAA,EAAA;MAAA,CAAA,CAAA,CAAA,IAAA,CAAX,EADM;IAAA,CAJR,CAAA;;AAAA,yBA4BA,cAAA,GAAgB,SAAA,GAAA;aACd,IAAC,CAAA,IAAI,CAAC,GAAG,CAAC,gBAAV,CAAA,CAA4B,CAAC,MAA7B,GAAsC,CAAA,IAAG,CAAA,cAD3B;IAAA,CA5BhB,CAAA;;sBAAA;;MA5DF,CAAA;;AAAA,EA6FA,MAAM,CAAC,UAAP,GAA0B;AACxB,yBAAA,YAAA,GAAc,EAAd,CAAA;;AAAA,yBACA,aAAA,GAAe,EADf,CAAA;;AAGa,IAAA,oBAAC,IAAD,GAAA;AAAQ,MAAP,IAAC,CAAA,OAAD,IAAO,CAAR;IAAA,CAHb;;AAAA,yBAKA,MAAA,GAAQ,SAAA,GAAA;AACN,UAAA,wEAAA;AAAA,MAAA,eAAA,GAAkB,IAAC,CAAA,IAAI,CAAC,SAAN,CAAA,CAAlB,CAAA;AAAA,MACA,aAAA,GAAgB,CAAA,CAAC,CAAE,eAAA,GAAkB,GAAnB,CADlB,CAAA;AAAA,MAEA,SAAA,GAAY,IAAI,CAAC,iBAAL,CAAuB,eAAvB,EAAwC,aAAxC,EAAuD,IAAC,CAAA,YAAxD,CAFZ,CAAA;AAAA,MAGA,WAAA,GAAc,SAAS,CAAC,WAHxB,CAAA;AAAA,MAIA,IAAA,GAAO,IAAI,CAAC,UAAL,CAAgB,aAAhB,EAA+B,CAAA,SAAA,KAAA,GAAA;eAAA,SAAA,GAAA;iBACpC;AAAA,YAAA,MAAA,EAAQ,KAAC,CAAA,YAAT;YADoC;QAAA,EAAA;MAAA,CAAA,CAAA,CAAA,IAAA,CAA/B,CAJP,CAAA;AAAA,MAOA,IAAC,CAAA,IAAI,CAAC,UAAN,CAAiB,CAAA,SAAA,KAAA,GAAA;eAAA,SAAC,GAAD,EAAM,KAAN,GAAA;AACf,cAAA,qBAAA;AAAA,UAAA,OAAA,GAAU,IAAI,CAAC,GAAL,CAAS,SAAC,GAAD,GAAA;mBAAQ,GAAG,CAAC,OAAZ;UAAA,CAAT,CAAV,CAAA;AAAA,UACA,GAAA,GAAM,IAAI,CAAC,SAAL,CAAe,OAAf,CADN,CAAA;AAAA,UAEA,CAAA,GAAI,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAFJ,CAAA;AAAA,UAGA,IAAA,GAAO,SAAS,CAAC,SAAU,CAAA,CAAA,CAH3B,CAAA;AAAA,UAIA,IAAK,CAAA,CAAA,CAAE,CAAC,MAAR,IAAkB,WAAA,GAAc,KAAC,CAAA,YAJjC,CAAA;AAAA,UAMA,KAAK,CAAC,GAAN,CAAU,IAAV,EAAgB,GAAhB,EAAqB,WAArB,EAAkC,WAAlC,CANA,CAAA;iBAOA,UAAA,CAAW,SAAA,GAAA;mBACT,KAAK,CAAC,SAAN,CAAA,EADS;UAAA,CAAX,EAEE,GAFF,EARe;QAAA,EAAA;MAAA,CAAA,CAAA,CAAA,IAAA,CAAjB,CAPA,CAAA;AAAA,MAmBA,UAAA,GAAa,IAAI,CAAC,SAAL,CAAe,IAAI,CAAC,GAAL,CAAS,SAAC,GAAD,GAAA;eAAQ,GAAG,CAAC,OAAZ;MAAA,CAAT,CAAf,CAnBb,CAAA;aAoBA,IAAC,CAAA,IAAI,CAAC,GAAG,CAAC,GAAV,CAAc,QAAd,EAAwB,UAAA,GAAa,IAAC,CAAA,aAAtC,EArBM;IAAA,CALR,CAAA;;AAAA,yBA6BA,cAAA,GAAgB,SAAA,GAAA;aACd,IAAC,CAAA,IAAI,CAAC,GAAG,CAAC,gBAAV,CAAA,CAA4B,CAAC,MAA7B,GAAsC,CAAA,IAAG,CAAA,cAD3B;IAAA,CA7BhB,CAAA;;sBAAA;;MA9FF,CAAA;AAAA","file":"layouts.js","sourceRoot":"/source/","sourcesContent":["# 水平网格布局\r\nwindow.HorizontalGridLayout = class HorizontalGridLayout\r\n  constructor: (@host)->\r\n    @GRIDS = 6\r\n    @GRID_PADDING = 4\r\n\r\n    @bind_events()\r\n\r\n  go: ->\r\n    # 计算屏幕宽高\r\n    screen_height = jQuery(document).height()\r\n    screen_width  = jQuery(document).width()\r\n\r\n    # 计算 grid 边长\r\n    side_length = (screen_height - @GRID_PADDING * (@GRIDS + 1)) / @GRIDS\r\n\r\n    that = @\r\n    max_left = 0\r\n    max_top = 0\r\n\r\n    @host.each_image (idx, image)->\r\n      x = ~~(idx / that.GRIDS)\r\n      y = idx % that.GRIDS\r\n\r\n      left = that.GRID_PADDING + x * (side_length + that.GRID_PADDING)\r\n      top = that.GRID_PADDING + y * (side_length + that.GRID_PADDING)\r\n\r\n      image.x = x\r\n      image.y = y\r\n      max_left = 0\r\n      max_top = 0\r\n      image.pos left, top, side_length, side_length\r\n\r\n      max_left = Math.max max_left, image.layout_left\r\n      max_top = Math.max max_top, image.layout_top\r\n\r\n      image.load() if image.is_in_screen()\r\n\r\n    @host.$container\r\n      .css\r\n        'height': '100%'\r\n        'width': max_left + side_length\r\n\r\n  bind_events: ->\r\n    # 鼠标滚轮横向滚动\r\n    @host.$el.on 'mousewheel', (evt)=>\r\n      move = 100\r\n      left = parseInt @host.$container.css 'left'\r\n      left -= move if evt.deltaY < 0\r\n      left += move if evt.deltaY > 0\r\n      left = 0 if left > 0\r\n\r\n      @host.$container\r\n        .css\r\n          'left': left\r\n\r\n      @host.lazy_load_images()\r\n\r\n\r\n# 瀑布流\r\nwindow.FlowLayout = class FlowLayout\r\n  GRID_SPACING: 15\r\n\r\n  constructor: (@host)->\r\n\r\n  render: ->\r\n    setTimeout =>\r\n      container_width = @host.get_width()\r\n      columns_count = ~~(container_width / 180)\r\n      grid_data = Util.spacing_grid_data container_width, columns_count, @GRID_SPACING\r\n      side_length = grid_data.side_length\r\n      cols = Util.array_init columns_count, => \r\n        height: @GRID_SPACING\r\n\r\n      @host.each_image (idx, image)=>\r\n        heights = cols.map (col)-> col.height\r\n        top = Util.array_min heights\r\n        x = heights.indexOf top\r\n        left = grid_data.positions[x]\r\n        height = side_length * image.height / image.width\r\n        cols[x].height += height + @GRID_SPACING\r\n\r\n        image.pos left, top, side_length, height\r\n        image.lazy_load()\r\n\r\n      max_height = Util.array_max cols.map (col)-> col.height\r\n      @host.$el.css 'height', max_height + @BOTTOM_MARGIN\r\n\r\n  # 计算是否满足加载更多图片的条件\r\n  need_load_more: ->\r\n    @host.$el.offset_of_window().bottom > - @BOTTOM_MARGIN\r\n\r\n\r\n# 普通网格\r\nwindow.GridLayout = class GridLayout\r\n  GRID_SPACING: 15\r\n  BOTTOM_MARGIN: 80\r\n\r\n  constructor: (@host)->\r\n\r\n  render: ->\r\n    container_width = @host.get_width()\r\n    columns_count = ~~(container_width / 200)\r\n    grid_data = Util.spacing_grid_data container_width, columns_count, @GRID_SPACING\r\n    side_length = grid_data.side_length\r\n    cols = Util.array_init columns_count, => \r\n      height: @GRID_SPACING\r\n\r\n    @host.each_image (idx, image)=>\r\n      heights = cols.map (col)-> col.height\r\n      top = Util.array_min heights\r\n      x = heights.indexOf top\r\n      left = grid_data.positions[x]\r\n      cols[x].height += side_length + @GRID_SPACING\r\n\r\n      image.pos left, top, side_length, side_length\r\n      setTimeout ->\r\n        image.lazy_load()\r\n      , 100\r\n\r\n    max_height = Util.array_max cols.map (col)-> col.height\r\n    @host.$el.css 'height', max_height + @BOTTOM_MARGIN\r\n\r\n  # 计算是否满足加载更多图片的条件\r\n  need_load_more: ->\r\n    @host.$el.offset_of_window().bottom > - @BOTTOM_MARGIN"]}